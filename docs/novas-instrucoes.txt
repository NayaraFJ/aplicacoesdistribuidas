Objetivo:
Desenvolver o Backend de uma aplicação distribuída, na arquitetura SOA, em que cada grupo da turma será responsável por um serviço específico.  Os estudantes, divididos em dez grupos de seis integrantes cada, desenvolverão uma API RESTful para coletar, armazenar e disponibilizar dados de um censo realizado dentro da própria turma do curso de Sistemas de Informação. Cada grupo será responsável por uma tabela específica no banco de dados, definindo sua estrutura, coletando os dados e implementando os endpoints da API para aquela tabela.

O sistema deve seguir os princípios de Arquitetura Orientada a Serviços (SOA):
•	Cada grupo implementa um serviço independente.
•	Os serviços se comunicam por interfaces bem definidas (APIs).
•	O sistema utiliza a mesma base de dados.
•	O sistema final resulta da integração entre os serviços.
1.	Grupo 1: Dados Pessoais e Contato (Alunos)
o	Nome, Matrícula (chave primária), E-mail, Data de Nascimento.



Tarefas do grupo:
•	Cada serviço deve ser independente (REST com PHP) utilizando o servidor infinity free e os exemplos de códigos disponibilizados no GIT da turma.
•	Os grupos que precisarem acessar os dados que não estão na sua tabela não pode acessar diretamente a base de dados; deve consumir os serviços dos outros grupos.

Entregas:
Cada grupo deverá entregar o link contendo o acesso ao sistema de CRUD, e postar também, todos os arquivos do projeto em um arquivo compactado no .ZIP, com o nome “projeto_zip” na mesma pasta. Para que eu consiga realizar os testes na minha máquina local.
Atenção! Todos os integrantes do grupo devem postar o link! Somente o líder precisa encaminhar o arquivo zip.
Toda a comunicação do sistema é por meio de APIs. Devido as limitações do servidor infinityfree, as APIs não irem funcionar em endereços diferentes. Por esta razão, os grupos que irão trabalhar com tabelas que possuem campos do tipo “chave estrangeira”, devem fazer a montagem dinâmica desses campos, tendo como referência o exemplo abaixo. 
// Exemplo com valores estáticos:
var dadosJSON = '[{"id": "01", "Nome": "São Paulo"}, {"id": "02", "Nome": "Rio de Janeiro"}]';
var estados = JSON.parse(dadosJSON);
var selectElement = document.getElementById('meu-select');

estados.forEach(function(estado) {
    var option = document.createElement('option');
    option.value = estado.id;
    option.textContent = estado.Nome;
    selectElement.appendChild(option);
});

//Exemplo dinâmico
fetch('../estados/get_estados.php') // 1. Faz a requisição para a API
    .then(response => { // 2. Trata a resposta da requisição
    if (!response.ok) {
      throw new Error('Erro na requisição: ' + response.status);
    }
    return response.json(); // 3. Converte o corpo da resposta para JSON
    })
    .then(data => { // 4. Processa os dados JSON
        var selectElement = document.getElementById('estados');
        var estados = data; // 3. Converte o corpo da resposta para JSON
        estados.forEach(function(estado) {
            var option = document.createElement('option');
            option.value = estado.id;
            option.textContent = estado.nome;
            selectElement.appendChild(option);
    });
    })
    .catch(error => { // 5. Trata possíveis erros
        console.error('Erro ao buscar dados:', error);
    });
Endereço do projeto no Infinity Free:

